mixin collapse
	span.collapsible_toggle&attributes(attributes)
	span.collapsible
		block
mixin math
	- var oldBuf = pug_html;
	- pug_html = '';
	Math
		block
	- pug_html = oldBuf + pug_html.replace(/\${1,2}(?!lib)[^$]+\${1,2}/g, (body)=> '{@html math(`'+body.replaceAll('$','')+'`)}');
	//- - pug_html = oldBuf + pug_html.replace(/\${1,2}(?!lib)[^$]+\${1,2}/g, (body)=> body.replaceAll('{','&lcub;').replaceAll('{','&rcub;').replaceAll('<','\\lt').replaceAll('>','\\gt'));
mixin m(where)
	- var oldBuf = pug_html;
	- pug_html = '';
	block
	- secBuf = pug_html;
	- pug_html = '';
	- is_block = attributes.class && attributes.class.includes("block") ? "true" : "false"
	<Math expression={String.raw`!{secBuf}`} is_block={#{is_block}}></Math>
	- pug_html = oldBuf + pug_html
	if where
		span
			| (
			each val,index in where
				span #[+m= index] #[span= ': ' + val + ', '] 
			| )

mixin source()
	if attributes.links
		each link in attributes.links
			a(href=link)
	if attributes.books
		each book in attributes.books
			a(href!="{book_"+book.index+"+'#page="+(book.page || 0)+"'}")
