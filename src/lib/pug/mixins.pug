mixin collapse
	span.collapsible_toggle&attributes(attributes)
	span.collapsible
		block
mixin math
	- var oldBuf = pug_html;
	- pug_html = '';
	Math
		block
	- pug_html = oldBuf + pug_html.replace(/\${1,2}(?!lib)[^$]+\${1,2}/g, (body)=> '{@html math(`'+body.replaceAll('$','')+'`)}');
	//- - pug_html = oldBuf + pug_html.replace(/\${1,2}(?!lib)[^$]+\${1,2}/g, (body)=> body.replaceAll('{','&lcub;').replaceAll('{','&rcub;').replaceAll('<','\\lt').replaceAll('>','\\gt'));
mixin m(where)
	- var oldBuf = pug_html;
	- pug_html = '';
	block
	- secBuf = pug_html;
	- pug_html = '';
	- is_block = attributes.class && attributes.class.includes("block") ? "true" : "false"
	span
		<Math expression={String.raw`!{secBuf}`} is_block={#{is_block}}></Math>
		if where
			span
				| (
				each val,index in where
					span #[+m= index] #[span= ': ' + val + ', '] 
				| )
	- pug_html = oldBuf + pug_html

mixin source
	if attributes.links
		each link in attributes.links
			a(href=link)
	if attributes.books
		each book in attributes.books
			a(href!="{book_"+book.index+"+'#page="+(book.page || 0)+"'}")

mixin LPTASK(objective,constraints,raw=false)
	- objective = objective.replaceAll('\\eq','=')
	- constraints = constraints.replaceAll('\\eq','=')
	- expression = (attributes.class || "").includes('beauty') ? String.raw`\begin{aligned} \text{maximize/minimize} \quad &  z=${objective}\\ \text{subject to} \quad & ${constraints.replaceAll('\\\\','\\\\ &')} \end{aligned}` : String.raw`\begin{aligned}z=${objective} \rightarrow \max \\ \begin{cases} ${constraints}\end{cases}\end{aligned}`
	if raw == false
		+m&attributes(attributes)!= expression
	else
		| !{expression}
mixin LPTABLE(rows)
	+m
		| \begin{array}{c|#{'c'.repeat(rows[0].length-2)}|c}
		each row,index in rows
			each number, index in row
				if index == 0
					| #{number}
				else
					| & #{number}
			| \\
			if index == 0
				| \hline
		| \end{array}

