p.intro Linear programming is not directly related to computer programming. The term was introduced in the 1950s when computers were few and mostly top secret, and the word programming was a military term that, at that time, referred to plans or schedules for training, logistical supply, or deployment of men. The word linear suggests that feasible plans are restricted by linear constraints (inequalities), and also that the quality of the plan (e.g., costs or duration) is also measured by a linear function of the considered quantities. In a similar spirit, linear programming soon started to be used for planning all kinds of economic activities, such as transport of raw materials and products among factories, sowing various crop plants, or cutting paper rolls into shorter ones in sizes ordered by customers. The phrase “planning with linear constraints” would perhaps better capture this original meaning of linear programming. However, the term linear programming has been well established for many years, and at the same time, it has acquired a considerably broader meaning: Not only does it play a role only in mathematical economy, it appears frequently in computer science and in many other fields.
dl
  dd Линейная программа
    en Linear program
  dd.flex
    Switcher
      +m.block.
        \begin{aligned}
        \vb c^T\vb x \to \max, i=\overline{1,m}:\sum_{j=1}^n a_{ij}x_j \quad \ge/\le/= \quad b_i,\; \vb x\ge 0 \\
        \hline
        \vb c^T\vb x=c_1x_1+c_2x_2+…+c_nx_n \to \max/\min \\
        \begin{cases}
        b_1\quad\ge/\le/= \quad a_{11}x_1+a_{12}x_2+…+a_{1n}x_n \\
        b_2 \quad\ge/\le/= \quad a_{21}x_1+a_{22}x_2+…+a_{2n}x_n \\
        \vdots \\
        b_m \quad \ge/\le/= \quad a_{m1}x_1+a_{m2}x_2+…+a_{mn}x_n \\
        x_1,x_2,…,x_n \ge 0
        \end{cases}
        \end{aligned}
      +m.block.
        \begin{aligned}
        \text{maximize/minimize}\quad \vb c^T\vb x \quad\text{subject to}\quad A \vb x \quad \ge/\le/= \quad \vb b \quad\text{and}\quad \vb x\ge 0\\
        \hline
        \begin{split}
        \text{maximize/minimize} \quad &  z=c_1x_1+c_2x_2+…+c_nx_n\\
        \text{subject to} \quad & b_1\quad\ge/\le/= \quad a_{11}x_1+a_{12}x_2+…+a_{1n}x_n \\
        & b_2 \quad\ge/\le/= \quad a_{21}x_1+a_{22}x_2+…+a_{2n}x_n \\
        & \vdots \\
        & b_m \quad \ge/\le/= \quad a_{m1}x_1+a_{m2}x_2+…+a_{mn}x_n \\
        & x_1,x_2,…,x_n \ge 0
        \end{split}
        \end{aligned}
  dd Вектора #[+m \vb c = \begin{pmatrix} c_1 \\ c_2 \\ \vdots \\ c_m \end{pmatrix}] - коэффициентов целевой функции; #[+m \vb b = \begin{pmatrix} b_1 \\ b_2 \\ \vdots \\ b_m \end{pmatrix}] - свободных членов; #[+m \vb x = (x_1; x_2; …; x_m);] - неизвестных

dl
  dt Equational form of a linear program
    a(book="Understanding and Using Linear Programming" chapter="4.1 Equational Form")
  dd: +m \begin{aligned} c^Tx \to \max \\ Ax=b \\ x \ge \vec 0 \end{aligned}
  dd #[+m c \in \R^n, b \in \R^m, x] - вектора коэффициентов целевой функции, значение ограничений(свободных членов), неизвестных соответсвенно; #[+m A = A_{m\times n} = (i=\overline{1,m},j=\overline{1,n}:a_{ij})] - матрица коэффициентов
  dt Ограничение неотрицательности
  dd частичные равенства #[+m Ax=b] и частичные неравенства формы #[+m j=\overline{1,n}:x_j \ge 0 \Leftrightarrow x \ge \vec 0]
    p.warning Although we call this form equational, it contains inequalities as well, and these must not be forgotten!
  dd All variables in the equational form have to satisfy the nonnegativity constraints. In problems encountered in practice we often have nonnegativity constraints automatically, since many quantities, such as the amount of consumed cucumber, cannot be negative.
  dt Transformation of an arbitrary linear program to equational form 
    toggle(target="example")
  example
    p: +m.
      \begin{aligned}
      3x_1 - 2x_2 \to \max \\
      2x_1 - x_2 \le 4 \\
      x_1 + 3x_2 \ge 5 \\
      x_2 \le 0
      \end{aligned}
    ol
      li To convert the inequality #[+m 2x_1 − x_2 \le 4] to an equation, introduce a new variable #[+m x_3], together with the nonnegativity constraint #[+m x_3 \ge 0], and replace the considered inequality by the equation #[+m 2x_1 − x_2 + x_3 = 4]. #[mark The auxiliary variable #[+m x_3], which won’t appear anywhere else in the transformed linear program, #[em represents the difference between the right-hand side and the left-hand side of the inequality]]. Such an auxiliary variable is called a #[dfn slack variable].
      li For the next inequality #[+m x_1 + 3x_2 ≥ 5] we first multiply by #[+m −1], which reverses the direction of the inequality. Then we introduce another slack variable x_4 with the nonnegativity constraint x_4 ≥ 0, and we replace the inequality by the equation −x1 − 3x_2 + x_4 = −5.
dl 
  dt Добавочные #[en slack] #[+m= s] переменные
  dd переменные добавляемые для превращения неравенств в равенства.
  dd На них также обязательно распространяется ограничение неотрицательности ведь если бы переменная могла бы принимать отрицательные значение то неравенство было бы ложным
    example #[+m x + y \le 10 \Rightarrow x+y+s = 10 \Rightarrow]
  dd #[strong Геометрический смысл] Смещение прямой от исходной позиции. При подставлении #[+m \pm s = -\alpha_1 x_1 - \alpha_2 x_2 - … - \alpha_n x_n + \const] координат точки #[+m () (x_1,x_2,…,x_n)] добавачная переменная равна расстоянию на которое надо сместить прямую #[+m \alpha_1 x_1 + \alpha_2 x_2 + … + \alpha_n x_n = \const] вверх(#[+m= s>0]) или вниз(#[+m= s<0]) чтобы она проходила через точку #[+m () (x_1,x_2,…,x_n)]. 
    example Допустим прямая задана как #[+m \alpha_1 x_1 + \alpha_2 x_2 + … + \alpha_n x_n \le/\ge \const], то приведя данное неравенство к равенству получим #[+m \alpha_1 x_1 + \alpha_2 x_2 + … + \alpha_n x_n \pm s = \const], а изсходя из свойств прямой #[+m x + y \pm s = \const] в декартовой системе координат, таких как при #[+m= s>0] прямая опускается на #[+m= s] единиц, а при #[+m= s<0] наоборот, можно сделать вывод что изменяя значение 
  dt Остаточная #[+m +s]
  dd остаток до предела
  dt Избыточная #[+m -s]
  dd переизбыток после предела
  dt Смешанная #[+m \pm s = s^+ - s^-]
  dd может обозначать как избыток так и остаток